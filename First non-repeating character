Given a string, find the first non-repeating character in it. For example, if the input
string is “rajendran”, then the output should be ‘j’ and if the input string is
“vinoth”, then the output should be ‘v’.

Input Format

rajendran 

Constraints

String length should not be more than 20

Output Format

j

Sample Input 0

vinoth
Sample Output 0

v
======================================================================================================================
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {

    char a[20];
    int c=0;
    //gets(a);
    //scanf("%[^\n]s",&a);
    scanf("%s",&a);
    for(int i=0;i<strlen(a);i++)
    {c=0;
        for(int j=0;j<strlen(a);j++)
            if(a[i]==a[j])
                c++;
        if(c==1)
        {
            printf("%c",a[i]);
            break;
        }
    }
    return 0;
}

///////////////////////////////////////////////////////////////////////////////

import java.util.Scanner;

public class UniqueCharacter {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String str = scanner.next(); // Reads a single word input
        scanner.close();
        
        for (int i = 0; i < str.length(); i++) {
            char ch = str.charAt(i);
            int count = 0;
            
            for (int j = 0; j < str.length(); j++) {
                if (str.charAt(j) == ch) {
                    count++;
                }
            }
            
            if (count == 1) {
                System.out.println(ch);
                break;
            }
        }
    }
}

